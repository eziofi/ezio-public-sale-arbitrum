/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EzioPublicSale,
  EzioPublicSaleInterface,
} from "../../contracts/EzioPublicSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "usdc_",
        type: "address",
      },
      {
        internalType: "contract EZIOV1",
        name: "ezio_",
        type: "address",
      },
      {
        internalType: "contract xEZIOV1",
        name: "xezio_",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "openingTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "EZIO_RATE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PUBLIC_SALE_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RAISE_USDC_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RAISE_USDC_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "XEZIO_RATE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "afterPublicSaleExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeFlag",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasWithdrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRaisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200199d3803806200199d833981016040819052620000349162000326565b60016000556200004433620002bb565b6001805460ff60a01b191690556001600160a01b038616620000be5760405162461bcd60e51b815260206004820152602860248201527f457a696f5075626c696353616c653a205553444320697320746865207a65726f604482015267206164647265737360c01b60648201526084015b60405180910390fd5b6001600160a01b038516620001275760405162461bcd60e51b815260206004820152602860248201527f457a696f5075626c696353616c653a20455a494f20697320746865207a65726f604482015267206164647265737360c01b6064820152608401620000b5565b6001600160a01b038416620001915760405162461bcd60e51b815260206004820152602960248201527f457a696f5075626c696353616c653a2078455a494f20697320746865207a65726044820152686f206164647265737360b81b6064820152608401620000b5565b42821015620001f85760405162461bcd60e51b815260206004820152603360248201526000805160206200197d83398151915260448201527f6265666f72652063757272656e742074696d65000000000000000000000000006064820152608401620000b5565b8181116200025e5760405162461bcd60e51b815260206004820152603760248201526000805160206200197d83398151915260448201527f6e6f74206265666f726520636c6f73696e672074696d650000000000000000006064820152608401620000b5565b600280546001600160a01b039788166001600160a01b0319918216179091556003805496881696821696909617909555600480549487169486169490941790935560058054929095169190931617909255600855600955620003a2565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200032357600080fd5b50565b60008060008060008060c087890312156200034057600080fd5b86516200034d816200030d565b602088015190965062000360816200030d565b604088015190955062000373816200030d565b606088015190945062000386816200030d565b809350506080870151915060a087015190509295509295509295565b6115cb80620003b26000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806360e52b2e116100c3578063ac369bb51161007c578063ac369bb51461029d578063b54e0a44146102a6578063b7a8807c146102b3578063d7adc714146102bc578063d96a094a146102c8578063f2fde38b146102db57600080fd5b806360e52b2e1461023e57806370a082311461024b578063715018a61461027457806382cd35781461027c5780638456cb59146102845780638da5cb5b1461028c57600080fd5b80633f4ba83a116101155780633f4ba83a146101b957806347535d7b146101c15780634b6753bc146101c9578063521eb273146101d25780635c975abb146101fd5780635e2c19db1461020f57600080fd5b80631515bc2b14610152578063260c14241461016d5780633250acb41461017757806338b902e8146101975780633ccfd60b146101b1575b600080fd5b60095442115b60405190151581526020015b60405180910390f35b6101756102ee565b005b6101896a52b7d2dcc80cd2e400000081565b604051908152602001610164565b61019f602381565b60405160ff9091168152602001610164565b610175610796565b610175610bd8565b610158610bfa565b61018960095481565b6005546101e5906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b600154600160a01b900460ff16610158565b61015861021d366004611410565b6001600160a01b031660009081526007602052604090206001015460ff1690565b6101896501d1a94a200081565b610189610259366004611410565b6001600160a01b031660009081526007602052604090205490565b610175610c15565b61019f604181565b610175610c27565b6001546001600160a01b03166101e5565b61018960065481565b600a546101589060ff1681565b61018960085481565b61018964e8d4a5100081565b6101756102d6366004611440565b610c3f565b6101756102e9366004611410565b610e5a565b6102f6610ed0565b600954421160405180604001604052806019815260200178457a696f5075626c696353616c653a206e6f7420636c6f736560381b815250906103545760405162461bcd60e51b815260040161034b9190611485565b60405180910390fd5b50600a5460ff16156103a85760405162461bcd60e51b815260206004820181905260248201527f457a696f5075626c696353616c653a20457865637574656420616c7265616479604482015260640161034b565b600a805460ff1916600117905560065460009064e8d4a51000106107315760006103d864e8d4a5100060646114ce565b6006546041906a52b7d2dcc80cd2e4000000906103fa9064e8d4a510006114ed565b61040491906114ce565b61040e91906114ce565b6104189190611504565b9050600061042c64e8d4a5100060646114ce565b6006546023906a52b7d2dcc80cd2e40000009061044e9064e8d4a510006114ed565b61045891906114ce565b61046291906114ce565b61046c9190611504565b90506104796001836114ed565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156104bc57600080fd5b505afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190611526565b141561056b576003546001600160a01b03166342966c686105166001856114ed565b6040518263ffffffff1660e01b815260040161053491815260200190565b600060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506105ca565b600354604051630852cd8d60e31b8152600481018490526001600160a01b03909116906342966c6890602401600060405180830381600087803b1580156105b157600080fd5b505af11580156105c5573d6000803e3d6000fd5b505050505b6105d56001826114ed565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a082319060240160206040518083038186803b15801561061957600080fd5b505afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106519190611526565b14156106c8576004546001600160a01b03166342966c686106736001846114ed565b6040518263ffffffff1660e01b815260040161069191815260200190565b600060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b50505050610725565b60048054604051630852cd8d60e31b81529182018390526001600160a01b0316906342966c6890602401600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050505b60065492505050610776565b64e8d4a5100060065411801561074f57506501d1a94a200060065411155b1561075d5750600654610776565b6501d1a94a2000600654111561077657506501d1a94a20005b600554600254610793916001600160a01b03918216911683610f2a565b50565b61079e610f92565b600954421160405180604001604052806019815260200178457a696f5075626c696353616c653a206e6f7420636c6f736560381b815250906107f35760405162461bcd60e51b815260040161034b9190611485565b506107fc610fec565b3360009081526007602052604090206001015460ff161561085f5760405162461bcd60e51b815260206004820152601d60248201527f457a696f5075626c696353616c653a206861732077697468647261776e000000604482015260640161034b565b60008064e8d4a51000600654116109135761088064e8d4a5100060646114ce565b336000908152600760205260409020546041906108a9906a52b7d2dcc80cd2e4000000906114ce565b6108b391906114ce565b6108bd9190611504565b91506108cf64e8d4a5100060646114ce565b336000908152600760205260409020546023906108f8906a52b7d2dcc80cd2e4000000906114ce565b61090291906114ce565b61090c9190611504565b9050610b55565b64e8d4a5100060065411801561093157506501d1a94a200060065411155b15610992576006546109449060646114ce565b3360009081526007602052604090205460419061096d906a52b7d2dcc80cd2e4000000906114ce565b61097791906114ce565b6109819190611504565b915060065460646108cf91906114ce565b6501d1a94a20006006541115610b55576006546109b09060646114ce565b336000908152600760205260409020546041906109d9906a52b7d2dcc80cd2e4000000906114ce565b6109e391906114ce565b6109ed9190611504565b915060065460646109fe91906114ce565b33600090815260076020526040902054602390610a27906a52b7d2dcc80cd2e4000000906114ce565b610a3191906114ce565b610a3b9190611504565b6006543360009081526007602052604081205492935091610a63906501d1a94a2000906114ce565b610a6d9190611504565b33600090815260076020526040902054610a8791906114ed565b9050610a946001826114ed565b6002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f9190611526565b1415610b3c57610b3733610b246001846114ed565b6002546001600160a01b03169190610f2a565b610b53565b600254610b53906001600160a01b03163383610f2a565b505b336000818152600760205260408082206001908101805460ff19169091179055518492917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491a3600354610bb3906001600160a01b03163384610f2a565b600454610bca906001600160a01b03163383610f2a565b5050610bd66001600055565b565b610be0610ed0565b610be8610f92565b610bf0611039565b610bd66001600055565b60006008544210158015610c1057506009544211155b905090565b610c1d610ed0565b610bd6600061108e565b610c2f610ed0565b610c37610f92565b610bf06110e0565b610c47610f92565b610c4f610bfa565b6040518060400160405280601881526020017f457a696f5075626c696353616c653a206e6f74206f70656e000000000000000081525090610ca35760405162461bcd60e51b815260040161034b9190611485565b50610cac610fec565b80610cf95760405162461bcd60e51b815260206004820152601f60248201527f457a696f5075626c696353616c653a2075736463416d6f756e74206973203000604482015260640161034b565b600254610d11906001600160a01b0316333084611123565b3360009081526007602052604081208054839290610d3090849061153f565b925050819055508060066000828254610d49919061153f565b90915550506006546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190611526565b10156040518060400160405280601c81526020017f457a696f5075626c696353616c653a2057726f6e6720416d6f756e740000000081525090610e225760405162461bcd60e51b815260040161034b9190611485565b50604051819033907fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e90600090a36107936001600055565b610e62610ed0565b6001600160a01b038116610ec75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034b565b6107938161108e565b6001546001600160a01b03163314610bd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034b565b6040516001600160a01b038316602482015260448101829052610f8d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611161565b505050565b60026000541415610fe55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034b565b6002600055565b600154600160a01b900460ff1615610bd65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161034b565b611041611233565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6110e8610fec565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110713390565b6040516001600160a01b038085166024830152831660448201526064810182905261115b9085906323b872dd60e01b90608401610f56565b50505050565b60006111b6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112839092919063ffffffff16565b805190915015610f8d57808060200190518101906111d49190611557565b610f8d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161034b565b600154600160a01b900460ff16610bd65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161034b565b6060611292848460008561129a565b949350505050565b6060824710156112fb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161034b565b600080866001600160a01b031685876040516113179190611579565b60006040518083038185875af1925050503d8060008114611354576040519150601f19603f3d011682016040523d82523d6000602084013e611359565b606091505b509150915061136a87838387611375565b979650505050505050565b606083156113e15782516113da576001600160a01b0385163b6113da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034b565b5081611292565b61129283838151156113f65781518083602001fd5b8060405162461bcd60e51b815260040161034b9190611485565b60006020828403121561142257600080fd5b81356001600160a01b038116811461143957600080fd5b9392505050565b60006020828403121561145257600080fd5b5035919050565b60005b8381101561147457818101518382015260200161145c565b8381111561115b5750506000910152565b60208152600082518060208401526114a4816040850160208701611459565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156114e8576114e86114b8565b500290565b6000828210156114ff576114ff6114b8565b500390565b60008261152157634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561153857600080fd5b5051919050565b60008219821115611552576115526114b8565b500190565b60006020828403121561156957600080fd5b8151801515811461143957600080fd5b6000825161158b818460208701611459565b919091019291505056fea26469706673582212204936da730415ed071c3af9debd92e1977f62cddbd51c516d4c6328c98e17dec164736f6c63430008080033457a696f5075626c696353616c653a206f70656e696e672074696d6520697320";

type EzioPublicSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EzioPublicSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EzioPublicSale__factory extends ContractFactory {
  constructor(...args: EzioPublicSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    usdc_: PromiseOrValue<string>,
    ezio_: PromiseOrValue<string>,
    xezio_: PromiseOrValue<string>,
    wallet_: PromiseOrValue<string>,
    openingTime_: PromiseOrValue<BigNumberish>,
    closingTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EzioPublicSale> {
    return super.deploy(
      usdc_,
      ezio_,
      xezio_,
      wallet_,
      openingTime_,
      closingTime_,
      overrides || {}
    ) as Promise<EzioPublicSale>;
  }
  override getDeployTransaction(
    usdc_: PromiseOrValue<string>,
    ezio_: PromiseOrValue<string>,
    xezio_: PromiseOrValue<string>,
    wallet_: PromiseOrValue<string>,
    openingTime_: PromiseOrValue<BigNumberish>,
    closingTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      usdc_,
      ezio_,
      xezio_,
      wallet_,
      openingTime_,
      closingTime_,
      overrides || {}
    );
  }
  override attach(address: string): EzioPublicSale {
    return super.attach(address) as EzioPublicSale;
  }
  override connect(signer: Signer): EzioPublicSale__factory {
    return super.connect(signer) as EzioPublicSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EzioPublicSaleInterface {
    return new utils.Interface(_abi) as EzioPublicSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EzioPublicSale {
    return new Contract(address, _abi, signerOrProvider) as EzioPublicSale;
  }
}
