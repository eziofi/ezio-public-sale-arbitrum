/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EzioPublicSale,
  EzioPublicSaleInterface,
} from "../../contracts/EzioPublicSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "usdc_",
        type: "address",
      },
      {
        internalType: "contract EZIOV1",
        name: "ezio_",
        type: "address",
      },
      {
        internalType: "contract xEZIOV1",
        name: "xezio_",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "openingTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "EZIO_RATE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PUBLIC_SALE_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RAISE_USDC_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RAISE_USDC_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "XEZIO_RATE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "afterPublicSaleExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeFlag",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRaisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200196338038062001963833981016040819052620000349162000326565b60016000556200004433620002bb565b6001805460ff60a01b191690556001600160a01b038616620000be5760405162461bcd60e51b815260206004820152602860248201527f457a696f5075626c696353616c653a205553444320697320746865207a65726f604482015267206164647265737360c01b60648201526084015b60405180910390fd5b6001600160a01b038516620001275760405162461bcd60e51b815260206004820152602860248201527f457a696f5075626c696353616c653a20455a494f20697320746865207a65726f604482015267206164647265737360c01b6064820152608401620000b5565b6001600160a01b038416620001915760405162461bcd60e51b815260206004820152602960248201527f457a696f5075626c696353616c653a2078455a494f20697320746865207a65726044820152686f206164647265737360b81b6064820152608401620000b5565b42821015620001f85760405162461bcd60e51b815260206004820152603360248201526000805160206200194383398151915260448201527f6265666f72652063757272656e742074696d65000000000000000000000000006064820152608401620000b5565b8181116200025e5760405162461bcd60e51b815260206004820152603760248201526000805160206200194383398151915260448201527f6e6f74206265666f726520636c6f73696e672074696d650000000000000000006064820152608401620000b5565b600280546001600160a01b039788166001600160a01b0319918216179091556003805496881696821696909617909555600480549487169486169490941790935560058054929095169190931617909255600855600955620003a2565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200032357600080fd5b50565b60008060008060008060c087890312156200034057600080fd5b86516200034d816200030d565b602088015190965062000360816200030d565b604088015190955062000373816200030d565b606088015190945062000386816200030d565b809350506080870151915060a087015190509295509295509295565b61159180620003b26000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063ac369bb51161007c578063ac369bb514610263578063b54e0a441461026c578063b7a8807c14610279578063d7adc71414610282578063d96a094a1461028e578063f2fde38b146102a157600080fd5b806370a0823114610211578063715018a61461023a57806382cd3578146102425780638456cb591461024a5780638da5cb5b1461025257600080fd5b80633f4ba83a1161010a5780633f4ba83a146101ae57806347535d7b146101b65780634b6753bc146101be578063521eb273146101c75780635c975abb146101f257806360e52b2e1461020457600080fd5b80631515bc2b14610147578063260c1424146101625780633250acb41461016c57806338b902e81461018c5780633ccfd60b146101a6575b600080fd5b60095442115b60405190151581526020015b60405180910390f35b61016a6102b4565b005b61017e6a52b7d2dcc80cd2e400000081565b604051908152602001610159565b610194602381565b60405160ff9091168152602001610159565b61016a61075c565b61016a610b9e565b61014d610bc0565b61017e60095481565b6005546101da906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b600154600160a01b900460ff1661014d565b61017e6501d1a94a200081565b61017e61021f3660046113d6565b6001600160a01b031660009081526007602052604090205490565b61016a610bdb565b610194604181565b61016a610bed565b6001546001600160a01b03166101da565b61017e60065481565b600a5461014d9060ff1681565b61017e60085481565b61017e64e8d4a5100081565b61016a61029c366004611406565b610c05565b61016a6102af3660046113d6565b610e20565b6102bc610e96565b600954421160405180604001604052806019815260200178457a696f5075626c696353616c653a206e6f7420636c6f736560381b8152509061031a5760405162461bcd60e51b8152600401610311919061144b565b60405180910390fd5b50600a5460ff161561036e5760405162461bcd60e51b815260206004820181905260248201527f457a696f5075626c696353616c653a20457865637574656420616c72656164796044820152606401610311565b600a805460ff1916600117905560065460009064e8d4a51000106106f757600061039e64e8d4a510006064611494565b6006546041906a52b7d2dcc80cd2e4000000906103c09064e8d4a510006114b3565b6103ca9190611494565b6103d49190611494565b6103de91906114ca565b905060006103f264e8d4a510006064611494565b6006546023906a52b7d2dcc80cd2e4000000906104149064e8d4a510006114b3565b61041e9190611494565b6104289190611494565b61043291906114ca565b905061043f6001836114b3565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba91906114ec565b1415610531576003546001600160a01b03166342966c686104dc6001856114b3565b6040518263ffffffff1660e01b81526004016104fa91815260200190565b600060405180830381600087803b15801561051457600080fd5b505af1158015610528573d6000803e3d6000fd5b50505050610590565b600354604051630852cd8d60e31b8152600481018490526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561057757600080fd5b505af115801561058b573d6000803e3d6000fd5b505050505b61059b6001826114b3565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a082319060240160206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061791906114ec565b141561068e576004546001600160a01b03166342966c686106396001846114b3565b6040518263ffffffff1660e01b815260040161065791815260200190565b600060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b505050506106eb565b60048054604051630852cd8d60e31b81529182018390526001600160a01b0316906342966c6890602401600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050505b6006549250505061073c565b64e8d4a5100060065411801561071557506501d1a94a200060065411155b15610723575060065461073c565b6501d1a94a2000600654111561073c57506501d1a94a20005b600554600254610759916001600160a01b03918216911683610ef0565b50565b610764610f58565b600954421160405180604001604052806019815260200178457a696f5075626c696353616c653a206e6f7420636c6f736560381b815250906107b95760405162461bcd60e51b8152600401610311919061144b565b506107c2610fb2565b3360009081526007602052604090206001015460ff16156108255760405162461bcd60e51b815260206004820152601d60248201527f457a696f5075626c696353616c653a206861732077697468647261776e0000006044820152606401610311565b60008064e8d4a51000600654116108d95761084664e8d4a510006064611494565b3360009081526007602052604090205460419061086f906a52b7d2dcc80cd2e400000090611494565b6108799190611494565b61088391906114ca565b915061089564e8d4a510006064611494565b336000908152600760205260409020546023906108be906a52b7d2dcc80cd2e400000090611494565b6108c89190611494565b6108d291906114ca565b9050610b1b565b64e8d4a510006006541180156108f757506501d1a94a200060065411155b156109585760065461090a906064611494565b33600090815260076020526040902054604190610933906a52b7d2dcc80cd2e400000090611494565b61093d9190611494565b61094791906114ca565b915060065460646108959190611494565b6501d1a94a20006006541115610b1b57600654610976906064611494565b3360009081526007602052604090205460419061099f906a52b7d2dcc80cd2e400000090611494565b6109a99190611494565b6109b391906114ca565b915060065460646109c49190611494565b336000908152600760205260409020546023906109ed906a52b7d2dcc80cd2e400000090611494565b6109f79190611494565b610a0191906114ca565b6006543360009081526007602052604081205492935091610a29906501d1a94a200090611494565b610a3391906114ca565b33600090815260076020526040902054610a4d91906114b3565b9050610a5a6001826114b3565b6002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610a9d57600080fd5b505afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad591906114ec565b1415610b0257610afd33610aea6001846114b3565b6002546001600160a01b03169190610ef0565b610b19565b600254610b19906001600160a01b03163383610ef0565b505b336000818152600760205260408082206001908101805460ff19169091179055518492917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491a3600354610b79906001600160a01b03163384610ef0565b600454610b90906001600160a01b03163383610ef0565b5050610b9c6001600055565b565b610ba6610e96565b610bae610f58565b610bb6610fff565b610b9c6001600055565b60006008544210158015610bd657506009544211155b905090565b610be3610e96565b610b9c6000611054565b610bf5610e96565b610bfd610f58565b610bb66110a6565b610c0d610f58565b610c15610bc0565b6040518060400160405280601881526020017f457a696f5075626c696353616c653a206e6f74206f70656e000000000000000081525090610c695760405162461bcd60e51b8152600401610311919061144b565b50610c72610fb2565b80610cbf5760405162461bcd60e51b815260206004820152601f60248201527f457a696f5075626c696353616c653a2075736463416d6f756e742069732030006044820152606401610311565b600254610cd7906001600160a01b03163330846110e9565b3360009081526007602052604081208054839290610cf6908490611505565b925050819055508060066000828254610d0f9190611505565b90915550506006546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610d5a57600080fd5b505afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9291906114ec565b10156040518060400160405280601c81526020017f457a696f5075626c696353616c653a2057726f6e6720416d6f756e740000000081525090610de85760405162461bcd60e51b8152600401610311919061144b565b50604051819033907fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e90600090a36107596001600055565b610e28610e96565b6001600160a01b038116610e8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610311565b61075981611054565b6001546001600160a01b03163314610b9c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6040516001600160a01b038316602482015260448101829052610f5390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611127565b505050565b60026000541415610fab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610311565b6002600055565b600154600160a01b900460ff1615610b9c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610311565b6110076111f9565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6110ae610fb2565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110373390565b6040516001600160a01b03808516602483015283166044820152606481018290526111219085906323b872dd60e01b90608401610f1c565b50505050565b600061117c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112499092919063ffffffff16565b805190915015610f53578080602001905181019061119a919061151d565b610f535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610311565b600154600160a01b900460ff16610b9c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610311565b60606112588484600085611260565b949350505050565b6060824710156112c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610311565b600080866001600160a01b031685876040516112dd919061153f565b60006040518083038185875af1925050503d806000811461131a576040519150601f19603f3d011682016040523d82523d6000602084013e61131f565b606091505b50915091506113308783838761133b565b979650505050505050565b606083156113a75782516113a0576001600160a01b0385163b6113a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610311565b5081611258565b61125883838151156113bc5781518083602001fd5b8060405162461bcd60e51b8152600401610311919061144b565b6000602082840312156113e857600080fd5b81356001600160a01b03811681146113ff57600080fd5b9392505050565b60006020828403121561141857600080fd5b5035919050565b60005b8381101561143a578181015183820152602001611422565b838111156111215750506000910152565b602081526000825180602084015261146a81604085016020870161141f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156114ae576114ae61147e565b500290565b6000828210156114c5576114c561147e565b500390565b6000826114e757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114fe57600080fd5b5051919050565b600082198211156115185761151861147e565b500190565b60006020828403121561152f57600080fd5b815180151581146113ff57600080fd5b6000825161155181846020870161141f565b919091019291505056fea264697066735822122069617ecc923eb0c5d0857b06ecbb04264fa760eacb8c6201637eafc5f85163a064736f6c63430008080033457a696f5075626c696353616c653a206f70656e696e672074696d6520697320";

type EzioPublicSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EzioPublicSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EzioPublicSale__factory extends ContractFactory {
  constructor(...args: EzioPublicSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    usdc_: PromiseOrValue<string>,
    ezio_: PromiseOrValue<string>,
    xezio_: PromiseOrValue<string>,
    wallet_: PromiseOrValue<string>,
    openingTime_: PromiseOrValue<BigNumberish>,
    closingTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EzioPublicSale> {
    return super.deploy(
      usdc_,
      ezio_,
      xezio_,
      wallet_,
      openingTime_,
      closingTime_,
      overrides || {}
    ) as Promise<EzioPublicSale>;
  }
  override getDeployTransaction(
    usdc_: PromiseOrValue<string>,
    ezio_: PromiseOrValue<string>,
    xezio_: PromiseOrValue<string>,
    wallet_: PromiseOrValue<string>,
    openingTime_: PromiseOrValue<BigNumberish>,
    closingTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      usdc_,
      ezio_,
      xezio_,
      wallet_,
      openingTime_,
      closingTime_,
      overrides || {}
    );
  }
  override attach(address: string): EzioPublicSale {
    return super.attach(address) as EzioPublicSale;
  }
  override connect(signer: Signer): EzioPublicSale__factory {
    return super.connect(signer) as EzioPublicSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EzioPublicSaleInterface {
    return new utils.Interface(_abi) as EzioPublicSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EzioPublicSale {
    return new Contract(address, _abi, signerOrProvider) as EzioPublicSale;
  }
}
