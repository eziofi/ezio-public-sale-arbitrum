/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  XEZIOV1,
  XEZIOV1Interface,
} from "../../../contracts/xEZIO.sol/XEZIOV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611351806100ed6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80635c975abb116100ad57806395d89b411161007157806395d89b411461025b578063a457c2d714610263578063a9059cbb14610276578063dd62ed3e14610289578063f2fde38b1461029c57600080fd5b80635c975abb146101fc57806370a0823114610207578063715018a6146102305780638456cb59146102385780638da5cb5b1461024057600080fd5b806339509351116100f457806339509351146101a65780633f4ba83a146101b957806340c10f19146101c357806342966c68146101d65780634cd88b76146101e957600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102af565b6040516101469190611023565b60405180910390f35b61016261015d366004611094565b610341565b6040519015158152602001610146565b6035545b604051908152602001610146565b6101626101923660046110be565b610359565b60405160128152602001610146565b6101626101b4366004611094565b61037d565b6101c161039f565b005b6101c16101d1366004611094565b6103b1565b6101c16101e43660046110fa565b6103c7565b6101c16101f73660046111b6565b6103d4565b60655460ff16610162565b61017661021536600461121a565b6001600160a01b031660009081526033602052604090205490565b6101c16104ee565b6101c1610500565b60c9546040516001600160a01b039091168152602001610146565b610139610510565b610162610271366004611094565b61051f565b610162610284366004611094565b61059a565b61017661029736600461123c565b6105a8565b6101c16102aa36600461121a565b6105d3565b6060603680546102be9061126f565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea9061126f565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b5050505050905090565b60003361034f818585610649565b5060019392505050565b60003361036785828561076d565b6103728585856107e7565b506001949350505050565b60003361034f81858561039083836105a8565b61039a91906112aa565b610649565b6103a761099d565b6103af6109f7565b565b6103b961099d565b6103c38282610a49565b5050565b6103d13382610b16565b50565b600054610100900460ff16158080156103f45750600054600160ff909116105b8061040e5750303b15801561040e575060005460ff166001145b6104765760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610499576000805461ff0019166101001790555b6104a38383610c56565b80156104e9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6104f661099d565b6103af6000610c9f565b61050861099d565b6103af610cf1565b6060603780546102be9061126f565b6000338161052d82866105a8565b90508381101561058d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161046d565b6103728286868403610649565b60003361034f8185856107e7565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6105db61099d565b6001600160a01b0381166106405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046d565b6103d181610c9f565b6001600160a01b0383166106ab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046d565b6001600160a01b03821661070c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046d565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061077984846105a8565b905060001981146107e157818110156107d45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161046d565b6107e18484848403610649565b50505050565b6001600160a01b03831661084b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046d565b6001600160a01b0382166108ad5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046d565b6108b8838383610d2e565b6001600160a01b038316600090815260336020526040902054818110156109305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161046d565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109909086815260200190565b60405180910390a36107e1565b60c9546001600160a01b031633146103af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046d565b6109ff610d94565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610a9f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161046d565b610aab60008383610d2e565b8060356000828254610abd91906112aa565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610b765760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161046d565b610b8282600083610d2e565b6001600160a01b03821660009081526033602052604090205481811015610bf65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161046d565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16610c7d5760405162461bcd60e51b815260040161046d906112d0565b610c878282610ddd565b610c8f610e0e565b610c97610e3d565b6103c3610e6c565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cf9610e93565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a2c3390565b60655460ff16156104e95760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840161046d565b60655460ff166103af5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161046d565b600054610100900460ff16610e045760405162461bcd60e51b815260040161046d906112d0565b6103c38282610ed9565b600054610100900460ff16610e355760405162461bcd60e51b815260040161046d906112d0565b6103af610f27565b600054610100900460ff16610e645760405162461bcd60e51b815260040161046d906112d0565b6103af610f5a565b600054610100900460ff166103af5760405162461bcd60e51b815260040161046d906112d0565b60655460ff16156103af5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161046d565b600054610100900460ff16610f005760405162461bcd60e51b815260040161046d906112d0565b8151610f13906036906020850190610f8a565b5080516104e9906037906020840190610f8a565b600054610100900460ff16610f4e5760405162461bcd60e51b815260040161046d906112d0565b6065805460ff19169055565b600054610100900460ff16610f815760405162461bcd60e51b815260040161046d906112d0565b6103af33610c9f565b828054610f969061126f565b90600052602060002090601f016020900481019282610fb85760008555610ffe565b82601f10610fd157805160ff1916838001178555610ffe565b82800160010185558215610ffe579182015b82811115610ffe578251825591602001919060010190610fe3565b5061100a92915061100e565b5090565b5b8082111561100a576000815560010161100f565b600060208083528351808285015260005b8181101561105057858101830151858201604001528201611034565b81811115611062576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461108f57600080fd5b919050565b600080604083850312156110a757600080fd5b6110b083611078565b946020939093013593505050565b6000806000606084860312156110d357600080fd5b6110dc84611078565b92506110ea60208501611078565b9150604084013590509250925092565b60006020828403121561110c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261113a57600080fd5b813567ffffffffffffffff8082111561115557611155611113565b604051601f8301601f19908116603f0116810190828211818310171561117d5761117d611113565b8160405283815286602085880101111561119657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111c957600080fd5b823567ffffffffffffffff808211156111e157600080fd5b6111ed86838701611129565b9350602085013591508082111561120357600080fd5b5061121085828601611129565b9150509250929050565b60006020828403121561122c57600080fd5b61123582611078565b9392505050565b6000806040838503121561124f57600080fd5b61125883611078565b915061126660208401611078565b90509250929050565b600181811c9082168061128357607f821691505b602082108114156112a457634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156112cb57634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212203ba6ab3adeb5ca8b391e2d94ce8a1b638380b254d3444dc3ac1435a76459601e64736f6c63430008080033";

type XEZIOV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XEZIOV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XEZIOV1__factory extends ContractFactory {
  constructor(...args: XEZIOV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XEZIOV1> {
    return super.deploy(overrides || {}) as Promise<XEZIOV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XEZIOV1 {
    return super.attach(address) as XEZIOV1;
  }
  override connect(signer: Signer): XEZIOV1__factory {
    return super.connect(signer) as XEZIOV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XEZIOV1Interface {
    return new utils.Interface(_abi) as XEZIOV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XEZIOV1 {
    return new Contract(address, _abi, signerOrProvider) as XEZIOV1;
  }
}
